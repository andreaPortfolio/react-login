{
  "version": 3,
  "sources": [
    "index.js"
  ],
  "names": [],
  "mappings": "AAAA,OAAO,KAAP,MAAkB,OAAlB;;AAEA,SAAQ,IAAR,QAAmB,oBAAnB;AACA,SAAQ,SAAR,EAAmB,UAAnB,EAA+B,WAA/B,EAA4C,WAA5C,QAA8D,SAA9D;;AAEA;AACA,IAAM,WAAW,uBAAjB;;AAGA,OAAO,SAAS,UAAT,CAAoB,MAApB,EAA4B;;AAE/B,WAAO,UAAU,QAAV,EAAoB;;AAEvB,gBAAQ,GAAR,CAAY,OAAO,KAAnB,EAA0B,OAAO,QAAjC;;AAGA,YAAI,OAAO;AACP,qBAAS,OAAO,KADT;AAEP,wBAAY,OAAO;AAFZ,SAAX;;AAKA,cAAM,IAAN,CAAc,QAAd,uBAA0C,IAA1C,EACK,IADL,CACU,oBAAY;AACd;AACA;AACA,oBAAQ,GAAR,CAAY,QAAZ;AACA,qBAAS;AACL,sBAAM;AADD,aAAT;AAGA;;AAEA,yBAAa,OAAb,CAAqB,OAArB,EAA8B,SAAS,IAAT,CAAc,EAA5C;AACA;AACA,qBAAS,KAAK,cAAL,CAAT;AAEH,SAdL,EAcO,KAdP,CAca;AAAA,mBAAM,SAAS,UAAU,WAAV,CAAT,CAAN;AAAA,SAdb;AAgBH,KA1BD;AA4BH;;AAGD,OAAO,SAAS,SAAT,CAAmB,KAAnB,EAA0B;;AAE7B,WAAO;AACH,cAAM,UADH;AAEH,iBAAS;AAFN,KAAP;AAKH;;AAED,OAAO,SAAS,WAAT,GAAuB;;AAE1B,iBAAa,UAAb,CAAwB,OAAxB;;AAEA,WAAO,EAAC,MAAM,WAAP,EAAP;AACH;;AAGD,OAAO,SAAS,UAAT,OAAuC;AAAA,QAAlB,KAAkB,QAAlB,KAAkB;AAAA,QAAX,QAAW,QAAX,QAAW;;;AAG1C,QAAI,OAAO;AACP,iBAAS,KADF;AAEP,oBAAY;AAFL,KAAX;AAIA,WAAO,UAAU,QAAV,EAAoB;;AAEvB,cAAM,IAAN,CAAc,QAAd,iBAAoC,IAApC,EACK,IADL,CACU,oBAAY;;AAEd,qBAAS,EAAC,MAAM,SAAP,EAAT;AACA,yBAAa,OAAb,CAAqB,OAArB,EAA8B,SAAS,IAAT,CAAc,EAA5C;AACA,qBAAS,KAAK,cAAL,CAAT;AACH,SANL,EAOK,KAPL,CAOW,iBAAS;AACZ,gBAAI,MAAM,QAAV,EAAoB;AAChB,oBAAI,MAAM,QAAN,CAAe,MAAf,KAA0B,GAA9B,EAAmC;AAC/B,4BAAQ,GAAR,CAAY,MAAM,QAAN,CAAe,IAAf,CAAoB,KAApB,CAA0B,OAAtC;AACA,6BAAS,UAAU,MAAM,QAAN,CAAe,IAAf,CAAoB,KAApB,CAA0B,OAApC,CAAT;AACH;AAEJ;AAGJ,SAjBL;AAkBH,KApBD;AAqBH;;AAGD,OAAO,SAAS,QAAT,GAAmB;AACtB,YAAQ,GAAR,CAAY,aAAa,OAAb,CAAqB,OAArB,CAAZ;AACA,WAAO,UAAU,QAAV,EAAoB;AACvB,cAAM,GAAN,CAAa,QAAb,iBAAmC,EAAC,SAAS,EAAC,eAAe,aAAa,OAAb,CAAqB,OAArB,CAAhB,EAAV,EAAnC,EACK,IADL,CACU,oBAAY;AACd,qBAAS;AACL,sBAAM,WADD;AAEL,yBAAS,SAAS;AAFb,aAAT;AAIA,oBAAQ,GAAR,CAAY,OAAZ,EAAqB,SAAS,IAA9B;AACH,SAPL,EAOO,KAPP,CAOa,iBAAS;AAClB,gBAAI,MAAM,QAAV,EAAoB;AAChB,oBAAI,MAAM,QAAN,CAAe,MAAf,KAA0B,GAA9B,EAAmC;AAC/B,4BAAQ,GAAR,CAAY,MAAM,QAAN,CAAe,IAAf,CAAoB,KAApB,CAA0B,OAAtC;AAEH;AAEJ;AAGJ,SAjBD;AAkBH,KAnBD;AAoBH",
  "file": "index-compiled.js",
  "sourcesContent": [
    "import axios from 'axios';\n\nimport {push} from 'react-router-redux'\nimport {AUTH_USER, AUTH_ERROR, UNAUTH_USER, FETCH_USERS} from './types'\n\n//require('axios-debug')(axios);\nconst ROOT_URL = 'http://localhost:3000';\n\n\nexport function signInUser(fields) {\n\n    return function (dispatch) {\n\n        console.log(fields.email, fields.password)\n\n\n        let data = {\n            \"email\": fields.email,\n            \"password\": fields.password\n        };\n\n        axios.post(`${ROOT_URL}/api/users/login`, data)\n            .then(response => {\n                // If request is good...\n                // - Update state to indicate user is authenticated\n                console.log(response)\n                dispatch({\n                    type: AUTH_USER\n                });\n                ///save the jwt token\n\n                localStorage.setItem('token', response.data.id);\n                //redirect to retstricted area by dispatch push\n                dispatch(push(\"/protectarea\"));\n\n            }).catch(() => dispatch(authError('Bed login')));\n\n    }\n\n}\n\n\nexport function authError(error) {\n\n    return {\n        type: AUTH_ERROR,\n        payload: error\n    }\n\n}\n\nexport function signoutUser() {\n\n    localStorage.removeItem('token');\n\n    return {type: UNAUTH_USER}\n}\n\n\nexport function signupUser({email, password}) {\n\n\n    let data = {\n        \"email\": email,\n        \"password\": password\n    };\n    return function (dispatch) {\n\n        axios.post(`${ROOT_URL}/api/Users`, data)\n            .then(response => {\n\n                dispatch({type: AUTH_USER});\n                localStorage.setItem('token', response.data.id);\n                dispatch(push(\"/protectarea\"));\n            })\n            .catch(error => {\n                if (error.response) {\n                    if (error.response.status === 422) {\n                        console.log(error.response.data.error.message);\n                        dispatch(authError(error.response.data.error.message));\n                    }\n\n                }\n\n\n            });\n    }\n}\n\n\nexport function getUsers(){\n    console.log(localStorage.getItem('token'))\n    return function (dispatch) {\n        axios.get(`${ROOT_URL}/api/tests`, {headers: {authorization: localStorage.getItem('token')}})\n            .then(response => {\n                dispatch({\n                    type: FETCH_USERS,\n                    payload: response.data\n                });\n                console.log('users', response.data)\n            }).catch(error => {\n            if (error.response) {\n                if (error.response.status === 422) {\n                    console.log(error.response.data.error.message);\n\n                }\n\n            }\n\n\n        });\n    }\n}\n"
  ]
}